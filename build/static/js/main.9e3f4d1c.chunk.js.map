{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","react_default","a","createElement","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","important","toggleImportanceOf","find","n","changedNote","objectSpread","returnedNote","map","catch","error","setTimeout","components_Notification","components_Note","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e3f4d1c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  return (\r\n    <div>\r\n      <li className=\"note\">{note.content}\r\n        <button onClick={toggleImportance}>Imp.</button>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    \r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, property of marco henriques burman esq.</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios';\r\n\r\n/*\r\nuse http://localhost:3001/notes for using own server\r\nuse fixed url https://protected-island-73178.herokuapp.com/notes/2 to hook up with Heroku back-end\r\nuse relative link /notes if frontend and backend are at the same address in Heroku\r\n*/\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n// Shorthand property names (ES2015)\r\nexport default { getAll, create, update }\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\nimport noteService from './services/notes'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('') \r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => setNotes(initialNotes))\r\n  }, [])\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  const rows = () => notesToShow.map(note =>\r\n    <Note\r\n      key={note.id}\r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n    />\r\n  )\r\n  \r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(data => {\r\n        setNotes(notes.concat(data))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n      \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      <Notification message={errorMessage} />\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote} \r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'  \r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}